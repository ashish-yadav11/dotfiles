# vim: ft=cfg
#
# This is the configuration file of "rifle", ranger's file executor/opener.
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   env <variable> | The environment variable "variable" is non-empty
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | A graphical environment is available (darwin, Xorg, or Wayland)
#
# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# Note: The "New command" serves only as an illustration, the exact
# implementation may differ.
# Note: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.

#-------------------------------------------
# Websites
#-------------------------------------------
ext x?html?                                       = ${VISUAL:-$EDITOR} -- "$@"
ext x?html?, has brave,                 X, flag f = brave "$@"
ext x?html?, has firefox,               X, flag f = firefox -- "$@"
ext x?html?, has chromium,              X, flag f = chromium "$@"
# Rarely installed browsers get higher priority; It is assumed that if you
# install a rare browser, you probably use it.  Firefox/konqueror/w3m on the
# other hand are often only installed as fallback browsers.
ext x?html?, has opera,                 X, flag f = opera "$@"
ext x?html?, has surf,                  X, flag f = surf -- file://"$1"
ext x?html?, has vimprobable,           X, flag f = vimprobable -- "$@"
ext x?html?, has vimprobable2,          X, flag f = vimprobable2 -- "$@"
ext x?html?, has qutebrowser,           X, flag f = qutebrowser -- "$@"
ext x?html?, has dwb,                   X, flag f = dwb -- "$@"
ext x?html?, has jumanji,               X, flag f = jumanji -- "$@"
ext x?html?, has luakit,                X, flag f = luakit -- "$@"
ext x?html?, has uzbl,                  X, flag f = uzbl -- "$@"
ext x?html?, has uzbl-tabbed,           X, flag f = uzbl-tabbed -- "$@"
ext x?html?, has uzbl-browser,          X, flag f = uzbl-browser -- "$@"
ext x?html?, has uzbl-core,             X, flag f = uzbl-core -- "$@"
ext x?html?, has midori,                X, flag f = midori -- "$@"
ext x?html?, has seamonkey,             X, flag f = seamonkey -- "$@"
ext x?html?, has iceweasel,             X, flag f = iceweasel -- "$@"
ext x?html?, has google-chrome-stable,  X, flag f = google-chrome-stable -- "$@"
ext x?html?, has epiphany,              X, flag f = epiphany -- "$@"
ext x?html?, has konqueror,             X, flag f = konqueror -- "$@"
ext x?html?, has elinks,                terminal  = elinks "$@"
ext x?html?, has links2,                terminal  = links2 "$@"
ext x?html?, has links,                 terminal  = links "$@"
ext x?html?, has lynx,                  terminal  = lynx -- "$@"
ext x?html?, has w3m,                   terminal  = w3m "$@"


#-------------------------------------------
# Misc
#-------------------------------------------
# Define the "editor" for text files as first action
 mime ^text, label editor = ${VISUAL:-$EDITOR} -- "$@"
 mime ^text, label pager  = $PAGER -- "$@"
!mime ^text, label editor, ext sh|py|c|h|cpp|go|pl|rb|js|php|jl|r|xml|json|csv|tex|rs|lua|f90|ipynb = ${VISUAL:-$EDITOR} -- "$@"
!mime ^text, label pager,  ext sh|py|c|h|cpp|go|pl|rb|js|php|jl|r|xml|json|csv|tex|rs|lua|f90|ipynb = $PAGER -- "$@"
!mime ^text, label editor, name ^(GNUm|[Mm])akefile$ = ${VISUAL:=$EDITOR} -- "$@"
!mime ^text, label pager,  name ^(GNUm|[Mm])akefile$ = $PAGER -- "$@"

ext 1                          = man "$1"
ext s[wmf]c, has zsnes,      X = zsnes "$1"
ext s[wmf]c, has snes9x-gtk, X = snes9x-gtk "$1"
ext nes, has fceux, X          = fceux "$1"
ext exe                        = wine "$1"
name ^(GNUm|[Mm])akefile$      = make


#--------------------------------------------
# Scripts
#-------------------------------------------
ext sh    = "$1"
ext sh    = sh -- "$1"
ext sh    = dash -- "$1"
ext sh    = bash -- "$1"
ext py    = python -- "$1"
ext py    = python -i -- "$1"
ext pl    = perl -- "$1"
ext rb    = ruby -- "$1"
ext js    = node -- "$1"
ext php   = php -- "$1"
ext jl    = julia -- "$1"
ext r     = Rscript "$1"
ext c|f90 = compile "$1" or
ext c|f90 = compile "$1" o
ext c|f90 = compile "$1"

ext ipynb,      has jupyter-nbconvert,                 = jupyter nbconvert --to pdf -- "$@"
ext ipynb,      has nbviewer-gui,            X, flag f = nbviewer-gui "$@"


#--------------------------------------------
# Audio without X
#-------------------------------------------
mime ^audio|ogg$, terminal, has mpv      = mpv --no-audio-display -- "$@"
mime ^audio|ogg$, terminal, has mplayer2 = mplayer2 -- "$@"
mime ^audio|ogg$, terminal, has mplayer  = mplayer -- "$@"
ext midi?,        terminal, has wildmidi = wildmidi -- "$@"
ext m4a,          terminal, has mpv      = mpv --no-audio-display -- "$@"

#--------------------------------------------
# Video/Audio with a GUI
#-------------------------------------------
mime ^video|audio, has mpv,      X, flag f = mpv -- "$@"
mime ^video|audio, has mpv,      X, flag f = mpv --fs -- "$@"
mime ^video|audio, has vlc,      X, flag f = vlc -- "$@"
mime ^video|audio, has gmplayer, X, flag f = gmplayer -- "$@"
mime ^video|audio, has smplayer, X, flag f = smplayer "$@"
mime ^video,       has mplayer2, X, flag f = mplayer2 -- "$@"
mime ^video,       has mplayer2, X, flag f = mplayer2 -fs -- "$@"
mime ^video,       has mplayer,  X, flag f = mplayer -- "$@"
mime ^video,       has mplayer,  X, flag f = mplayer -fs -- "$@"
mime ^video|audio, has totem,    X, flag f = totem -- "$@"
mime ^video|audio, has totem,    X, flag f = totem --fullscreen -- "$@"

#--------------------------------------------
# Video without X
#-------------------------------------------
mime ^video, terminal, !X, has mpv       = mpv -- "$@"
mime ^video, terminal, !X, has mplayer2  = mplayer2 -- "$@"
mime ^video, terminal, !X, has mplayer   = mplayer -- "$@"


#-------------------------------------------
# Documents
#-------------------------------------------
mime ^application/pdf, has rzathura,      X, flag f = rzathura -- "$@"
mime ^application/pdf, has rzathura,      X, flag f = rzathura -f "$@"
mime ^application/pdf, has zathura,       X, flag f = zathura -- "$@"
mime ^application/pdf, has okular,        X, flag f = okular -- "$@"
mime ^application/pdf, has sioyek,        X, flag f = sioyek -- "$@"
mime ^application/pdf, has llpp,          X, flag f = llpp "$@"
mime ^application/pdf, has mupdf,         X, flag f = mupdf "$@"
mime ^application/pdf, has mupdf-x11,     X, flag f = mupdf-x11 "$@"
mime ^application/pdf, has apvlv,         X, flag f = apvlv -- "$@"
mime ^application/pdf, has xpdf,          X, flag f = xpdf -- "$@"
mime ^application/pdf, has evince,        X, flag f = evince -- "$@"
mime ^application/pdf, has atril,         X, flag f = atril -- "$@"
mime ^application/pdf, has epdfview,      X, flag f = epdfview -- "$@"
mime ^application/pdf, has qpdfview,      X, flag f = qpdfview "$@"
mime ^application/pdf, has open,          X, flag f = open "$@"

mime ^image/vnd.djvu, has rzathura,       X, flag f = rzathura -- "$@"
mime ^image/vnd.djvu, has rzathura,       X, flag f = rzathura -f "$@"
mime ^image/vnd.djvu, has zathura,        X, flag f = zathura -- "$@"
mime ^image/vnd.djvu, has okular,         X, flag f = okular -- "$@"
mime ^image/vnd.djvu, has evince,         X, flag f = evince -- "$@"
mime ^image/vnd.djvu, has atril,          X, flag f = atril -- "$@"
mime ^image/vnd.djvu, has djview,         X, flag f = djview -- "$@"

mime ^(image|application)/epub, has rzathura,       X, flag f = rzathura -- "$@"
mime ^(image|application)/epub, has rzathura,       X, flag f = rzathura -f "$@"
mime ^(image|application)/epub, has zathura,        X, flag f = zathura -- "$@"
mime ^(image|application)/epub, has ebook-viewer,   X, flag f = ebook-viewer -- "$@"
mime ^(image|application)/epub, has mupdf,          X, flag f = mupdf -- "$@"
ext mobi, has ebook-viewer,                         X, flag f = ebook-viewer -- "$@"

ext cbr,  has rzathura,                   X, flag f = rzathura -- "$@"
ext cbr,  has rzathura,                   X, flag f = rzathura -f "$@"
ext cbr,  has zathura,                    X, flag f = zathura -- "$@"
ext cbz,  has rzathura,                   X, flag f = rzathura -- "$@"
ext cbz,  has rzathura,                   X, flag f = rzathura -f "$@"
ext cbz,  has zathura,                    X, flag f = zathura -- "$@"

mime ^application/postscript,   has rzathura,   X, flag f = rzathura -- "$@"
mime ^application/postscript,   has rzathura,   X, flag f = rzathura -f "$@"
mime ^application/postscript,   has zathura,    X, flag f = zathura -- "$@"
mime ^application/postscript,   has okular,     X, flag f = okular -- "$@"

ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric|csv, has libreoffice, X, flag f = libreoffice "$@"
ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric|csv, has gnumeric,    X, flag f = gnumeric -- "$@"
ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric|csv, has kspread,     X, flag f = kspread -- "$@"
ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric|csv, has ooffice,     X, flag f = ooffice "$@"

ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric|csv, has libreoffice            = libreoffice --convert-to pdf "$@"

ext docx?, has catdoc,      terminal  = catdoc -- "$@" | $PAGER


#-------------------------------------------
# Images
#-------------------------------------------
mime ^image/svg, has inkscape,               X, flag f = inkscape -- "$@"
mime ^image/svg, has display,                X, flag f = display -- "$@"

mime ^image(?!/vnd.djvu), has sxiv,          X, flag f = sxiv -- "$@"
mime ^image(?!/vnd.djvu), has gthumb,        X, flag f = gthumb -- "$@"
mime ^image(?!/vnd.djvu), has gimp,          X, flag f = gimp -- "$@"
mime ^image(?!/vnd.djvu), has ristretto,     X, flag f = ristretto -- "$@"
mime ^image(?!/vnd.djvu), has display,       X, flag f = display -- "$@"
mime ^image(?!/vnd.djvu), has feh,           X, flag f = feh -- "$@"
mime ^image(?!/vnd.djvu), has imv,           X, flag f = imv -- "$@"
mime ^image(?!/vnd.djvu), has pqiv,          X, flag f = pqiv -- "$@"
mime ^image(?!/vnd.djvu), has mirage,        X, flag f = mirage -- "$@"
mime ^image(?!/vnd.djvu), has eog,           X, flag f = eog -- "$@"
mime ^image(?!/vnd.djvu), has eom,           X, flag f = eom -- "$@"
mime ^image(?!/vnd.djvu), has geeqie,        X, flag f = geeqie -- "$@"
mime ^image(?!/vnd.djvu), has gpicview,      X, flag f = gpicview -- "$@"
mime ^image(?!/vnd.djvu), has gwenview,      X, flag f = gwenview -- "$@"
ext xcf,                                     X, flag f = gimp -- "$@"


#-------------------------------------------
# Archives
#-------------------------------------------
ext bz2|gz|jar|rar|tar|xz|zip|zst,      has engrampa, flag f = engrampa -- "$@"
ext ace,        has unace,              has engrampa, flag f = engrampa -- "$@"
ext 7z|arj|exe, has p7zip,              has engrampa, flag f = engrampa -- "$@"

# avoid password prompt by providing empty password
ext 7z, has 7z = 7z -p l "$@" | $PAGER
# This requires atool
ext ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,     has atool = atool --list --each -- "$@" | $PAGER
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --list --each -- "$@" | $PAGER
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has atool = atool --extract --each -- "$@"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --extract --each -- "$@"

# Listing and extracting archives without atool:
ext tar|gz|bz2|xz, has tar   = tar vvtf "$1" | $PAGER
ext tar|gz|bz2|xz, has tar   = for file in "$@"; do tar vvxf "$file"; done
ext bz2,           has bzip2 = for file in "$@"; do bzip2 -dk "$file"; done
ext zip,           has unzip = unzip -l "$1" | less
ext zip,           has unzip = for file in "$@"; do unzip -d "${file%.*}" "$file"; done
ext ace,           has unace = unace l "$1" | less
ext ace,           has unace = for file in "$@"; do unace e "$file"; done
ext rar,           has unrar = unrar l "$1" | less
ext rar,           has unrar = for file in "$@"; do unrar x "$file"; done


#-------------------------------------------
# Fonts
#-------------------------------------------
mime ^font, has fontforge, X, flag f = fontforge "$@"


#-------------------------------------------
# Flag t fallback terminals
#-------------------------------------------
mime ^ranger/x-terminal-emulator, has st = st -e "$@"
mime ^ranger/x-terminal-emulator, has termite = termite -x "$@"
mime ^ranger/x-terminal-emulator, has alacritty = alacritty -e "$@"
# Rarely installed terminal emulators get higher priority; It is assumed that
# if you install a rare terminal emulator, you probably use it.
# gnome-terminal/konsole/xterm on the other hand are often installed as part of
# a desktop environment or as fallback terminal emulators.
mime ^ranger/x-terminal-emulator, has terminology = terminology -e "$@"
mime ^ranger/x-terminal-emulator, has kitty = kitty -- "$@"
mime ^ranger/x-terminal-emulator, has sakura = sakura -e "$@"
mime ^ranger/x-terminal-emulator, has lilyterm = lilyterm -e "$@"
#mime ^ranger/x-terminal-emulator, has cool-retro-term = cool-retro-term -e "$@"
#mime ^ranger/x-terminal-emulator, has yakuake = yakuake -e "$@"
mime ^ranger/x-terminal-emulator, has guake = guake -ne "$@"
mime ^ranger/x-terminal-emulator, has tilda = tilda -c "$@"
mime ^ranger/x-terminal-emulator, has terminator = terminator -x "$@"
mime ^ranger/x-terminal-emulator, has urxvt = urxvt -e "$@"
mime ^ranger/x-terminal-emulator, has pantheon-terminal = pantheon-terminal -e "$@"
mime ^ranger/x-terminal-emulator, has lxterminal = lxterminal -e "$@"
mime ^ranger/x-terminal-emulator, has mate-terminal = mate-terminal -x "$@"
mime ^ranger/x-terminal-emulator, has xfce4-terminal = xfce4-terminal -x "$@"
mime ^ranger/x-terminal-emulator, has konsole = konsole -e "$@"
mime ^ranger/x-terminal-emulator, has gnome-terminal = gnome-terminal -- "$@"
mime ^ranger/x-terminal-emulator, has xterm = xterm -e "$@"


#-------------------------------------------
# sudoeditor
#-------------------------------------------
 mime ^text, label sudoeditor = sudo ${VISUAL:-$EDITOR} -- "$@"
!mime ^text, label sudoeditor, ext sh|py|c|h|cpp|go|pl|rb|js|php|jl|r|xml|json|csv|tex|rs|lua|f90|ipynb = sudo ${VISUAL:-$EDITOR} -- "$@"


#####################################################################
# asks mess up counting, so delegating them to the bottom           #
# https://github.com/ranger/ranger/pull/1341#issuecomment-537264495 #
#####################################################################
# Define the editor for non-text files + pager as last action
              !mime ^text, !ext sh|py|c|h|cpp|go|pl|rb|js|php|jl|r|xml|json|csv|tex|rs|lua|f90|ipynb, !name ^(GNUm|[Mm])akefile$ = ask
label editor, !mime ^text, !ext sh|py|c|h|cpp|go|pl|rb|js|php|jl|r|xml|json|csv|tex|rs|lua|f90|ipynb, !name ^(GNUm|[Mm])akefile$ = ${VISUAL:-$EDITOR} -- "$@"
label pager,  !mime ^text, !ext sh|py|c|h|cpp|go|pl|rb|js|php|jl|r|xml|json|csv|tex|rs|lua|f90|ipynb, !name ^(GNUm|[Mm])akefile$ = $PAGER -- "$@"

# generic opener
#label open, has xdg-open = xdg-open -- "$@"

# Execute a file as program/script.
#!ext sh, mime application/x-executable = ask
#!ext sh, mime application/x-executable = "$1"
